# customize Y axis
#base = base + scale_y_continuous(breaks=c(0,0.1, 0.25,0.40,0.50),
#                                 limits = c(0, 0.5),
#                                 labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
base = base + geom_hline(yintercept = 0.25, linetype="dashed", size=1.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.02, 0.05,0.10,0.22),
limits = c(0, 0.22),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
base = base + geom_hline(yintercept = 0.25, linetype="dashed", size=1.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
levels(County)
levels(edudat3$County)
unique(edudat3$County)
length(unique(edudat3$County))/100
100/length(unique(edudat3$County))
length(unique(edudat3$County))
100/length(unique(edudat3$County))
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.02, 0.05,0.10,0.22),
limits = c(0, 0.22),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=1.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
View(edudat)
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.02, 0.05,0.10,0.22),
limits = c(0, 0.22),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=1.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=1.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=1.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
library(ggplot2)
edudat2=edudat[complete.cases(edudat$LocaleType),]
#base
base= ggplot(data = edudat2, aes(x = LocaleType))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.1, 0.25,0.40,0.50),
limits = c(0, 0.5),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
base = base + geom_hline(yintercept = 0.25, linetype="dashed", size=1.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
vjust=1, # if flipping 'hjust'
size = 3)
# flip?
base #+ coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=1)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=0.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=0.5,color='gray')
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=0.5,color='yellow')
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=0.5,color='black')
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=1,alpha=0.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 3)
# flip?
base + coord_flip()
library(ggplot2)
edudat2=edudat[complete.cases(edudat$LocaleType),]
#base
base= ggplot(data = edudat2, aes(x = LocaleType))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.1, 0.25,0.40,0.50),
limits = c(0, 0.5),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
base = base + geom_hline(yintercept = 0.25, linetype="dashed", size=1.5,alpha=0.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
vjust=1, # if flipping 'hjust'
size = 3)
# flip?
base #+ coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=1,alpha=0.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=1, # if flipping 'hjust'
size = 1)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=1,alpha=0.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=1, # if flipping 'hjust'
size = 1.5)
# flip?
base + coord_flip()
edudat3=edudat[complete.cases(edudat$County),]
#base
base= ggplot(data = edudat3, aes(x = County))
#grammar: turn base into barplot
base = base + geom_bar(aes(y = prop.table(..count..) ),
fill ="gray")
# customize Y axis
base = base + scale_y_continuous(breaks=c(0,0.025, 0.05,0.10,0.22),
limits = c(0, 0.22),expand = c(0, 0),
labels=scales::percent_format()) #library(scales)
# put titles
base = base + labs(title=titleText2,x =NULL, y = NULL)
# add reference line
# 100/length(unique(edudat3$County))
base = base + geom_hline(yintercept = 0.025, linetype="dashed", size=1,alpha=0.5)
# less ink
base = base + theme(panel.background = element_rect(fill = "white",
colour = "grey50"))
# annotating
base = base + geom_text(aes(y = prop.table(..count..) ,
label = paste0(round(prop.table(..count..) * 100,2), '%')),
stat = 'count',
hjust=0, # if flipping 'hjust'
size = 1.5)
# flip?
base + coord_flip()
table(edudat$High.Grade)
# getting original levels:
levelCat=names(table(edudat$High.Grade))
# reordering original levels (PK and KG are first)
# the levels start with the last two levels: tail(levelCat,2)
# but in reverse order: rev(tail(levelCat,2))
# the old first elements without the last two ones: head(levelCat,-2)
levelCat=c(rev(tail(levelCat,2)),head(levelCat,-2))
# this is what we have now:
levelCat
table(edudat$High.Grade)
levelCat=names(table(edudat$High.Grade))
levelCat
head(levelCat,-2)
sort(head(levelCat,-2))
sort(as.numerica(head(levelCat,-2)))
sort(as.numeric(head(levelCat,-2)))
levelCat=as.numeric(names(table(edudat$High.Grade)))
levelCat
levelCat=names(table(edudat$High.Grade))
c(sort(as.numeric(head(levelCat,-2))),rev(tail(levelCat,2)))
c(rev(tail(levelCat,2)),sort(as.numeric(head(levelCat,-2))))
levelCat=c(part1,part2)
part1=rev(tail(levelCat,2))
# the old first elements without the last two ones: head(levelCat,-2)
part2=sort(as.numeric(head(levelCat,-2)))
levelCat=c(part1,part2)
levelCat
# getting original levels:
levelCat=names(table(edudat$High.Grade))
# reordering original levels (PK and KG are first)
# the levels start with the last two levels: tail(levelCat,2)
# but in reverse order: rev(tail(levelCat,2))
part1=rev(tail(levelCat,2))
# the old first elements without the last two ones: head(levelCat,-2)
part2=sort(as.numeric(head(levelCat,-2)))
levelCat=c(part1,part2)
# this is what we have now:
levelCat
# Formatting:
edudat$High.Grade=factor(edudat$High.Grade,
levels = levelCat,
labels=levelCat,ordered=T)
table(schoolPub$High.Grade.)
table(edudat$High.Grade)
edudat4=edudat[complete.cases(edudat$High.Grade),]
c = ggplot(edudat4,aes(High.Grade))
c + geom_bar()
edudat4=edudat[complete.cases(edudat$High.Grade),]
base = ggplot(edudat4,aes(High.Grade))
base + geom_bar()
# 'y' has to be numeric
# 'x' is 1 when you need to see one boxplot (no variable to split 'y')
base=ggplot(edudat4, aes(x=1, y=as.numeric(High.Grade)))
base + geom_boxplot() + coord_flip() # to show it horizontally
# to see the ordinal levels
box1 = base + geom_boxplot() + coord_flip()
box1 + scale_y_continuous(labels= levelCat,breaks=1:15)
# 'y' has to be numeric
# 'x' is 1 when you need to see one boxplot (no variable to split 'y')
box1 = ggplot(edudat4, aes(x=1, y=as.numeric(High.Grade)))
box1 + geom_boxplot() + coord_flip() # to show it horizontally
# to see the ordinal levels
box2 = base + geom_boxplot() + coord_flip()
box2 + scale_y_continuous(labels= levelCat,breaks=1:15)
str(edudat4)
str(edudat)
save(edudat,'edudat.rda')
?save
save(edudat,file='edudat.rda')
