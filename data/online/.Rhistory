data=read.csv("DFLimaMet.csv")
head(data)
head(data)
colnames(data)= c("x", "candidato", "alias" ,"followers", "following", "antiguedad", "año", "meses", "agosto", "setiembre")
colnames(data)= c( "candidato", "alias" ,"followers", "following", "antiguedad", "año", "meses", "agosto", "setiembre")
ggplot(data2[data$agosto >0,], aes(x=antiguedad, y=intencion_voto, size=followers, color=following)) + geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter") +
geom_label_repel(aes(label = candidato),
box.padding   = 0.3,
segment.color = 'grey50',
size=3) +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)  + theme(
panel.grid.minor = element_blank()
)
ggplot(data2[data$agosto >0,], aes(x=antiguedad, y=agosto, size=followers, color=following)) + geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter") +
geom_label_repel(aes(label = candidato),
box.padding   = 0.3,
segment.color = 'grey50',
size=3) +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)  + theme(
panel.grid.minor = element_blank()
)
library(ggplot2)
library(ggrepel)
library(plotly)
ggplot(data2[data$agosto >0,], aes(x=antiguedad, y=agosto, size=followers, color=following)) + geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter") +
geom_label_repel(aes(label = candidato),
box.padding   = 0.3,
segment.color = 'grey50',
size=3) +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)  + theme(
panel.grid.minor = element_blank()
)
ggplot(data[data$agosto >0,], aes(x=antiguedad, y=agosto, size=followers, color=following)) + geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter") +
geom_label_repel(aes(label = candidato),
box.padding   = 0.3,
segment.color = 'grey50',
size=3) +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)  + theme(
panel.grid.minor = element_blank()
)
x <- data2$candidato
x <- data[data$agosto >0,]$candidato
hovertxt <- paste("Candidato:", x)
graph <- ggplot(data[data$agosto >0,], aes(x=antiguedad, y=agosto, size=followers, color=following,text = hovertxt))+ geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter") +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)
p <- ggplotly(graph)
p
ggplot(data[data$agosto >0,], aes(x=antiguedad, y=setiembre, size=followers, color=following)) + geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter") +
geom_label_repel(aes(label = candidato),
box.padding   = 0.3,
segment.color = 'grey50',
size=3) +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)  + theme(
panel.grid.minor = element_blank()
)
x <- data[data$agosto >0,]$candidato
hovertxt <- paste("Candidato:", x)
graph <- ggplot(data[data$agosto >0,], aes(x=antiguedad, y=setiembre, size=followers, color=following,text = hovertxt))+ geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter") +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)
p <- ggplotly(graph)
p
ggplot(data[data$setiembre >0,], aes(x=antiguedad, y=setiembre, size=followers, color=following)) + geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter") +
geom_label_repel(aes(label = candidato),
box.padding   = 0.3,
segment.color = 'grey50',
size=3) +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)  + theme(
panel.grid.minor = element_blank()
)
x <- data[data$setiembre >0,]$candidato
hovertxt <- paste("Candidato:", x)
graph <- ggplot(data[data$agosto >0,], aes(x=antiguedad, y=setiembre, size=followers, color=following,text = hovertxt))+ geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter") +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)
p <- ggplotly(graph)
p
library(ggplot2)
library(ggrepel)
library(plotly)
data=read.csv("DFLimaMet.csv")
head(data)
colnames(data)= c( "candidato", "alias" ,"followers", "following", "antiguedad", "año", "meses", "agosto", "setiembre")
ggplot(data[data$setiembre >0,], aes(x=antiguedad, y=setiembre, size=followers, color=following)) + geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter (years)") +
geom_label_repel(aes(label = candidato),
box.padding   = 0.3,
segment.color = 'grey50',
size=3) +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)  + theme(
panel.grid.minor = element_blank()
)
x <- data[data$setiembre >0,]$candidato
hovertxt <- paste("Candidato:", x)
graph <- ggplot(data[data$agosto >0,], aes(x=antiguedad, y=setiembre, size=followers, color=following,text = hovertxt))+ geom_point() + ggtitle("Utilizan twitter los candidatos con mayor intencion de voto en Lima?") + ylab("% Intencion de voto") + xlab("Tiempo en twitter (years)") +
scale_color_gradient(low = '#fcae91', high = '#a50f15') + scale_y_continuous(breaks = seq(0,20,5)) + scale_x_continuous(breaks=seq(0,8,2)) + xlim(0,8) + ylim(0,20)
p <- ggplotly(graph)
p
library(readxl)
library(tidyverse)
dataGR14=read_xlsx("Tabla10-ERM2014-Regional.xlsx")
head(dataGR14)
organizacionesGR14 = dataGR14[c(5,6)]
organizacionesGR14 = organizacionesGR14[!duplicated(organizacionesGR14),]
organizacionesGR14 = organizacionesGR14[-c(1,4),]
nrow(organizacionesGR14)
table(organizacionesGR14$TIPOORGPOL)
names(table(organizacionesGR14[organizacionesGR14$TIPOORGPOL=="PARTIDO POLITICO",]$TXORGPOL))
electores = dataGR14 %>%
group_by(TXUBIGEO) %>% #seleccionar una fila por distrito
summarise(electoresGR14 = max(ELECTORES, na.rm = T))
emitidos = dataGR14 %>% group_by(TXUBIGEO) %>%
summarise(emitidosGR14 = sum(VOTOS, na.rm = T))
data_finalGR14 = left_join(electores, emitidos, by="TXUBIGEO") #join
#ciudar que los que tienen 0 en votos emitidos sean NA
data_finalGR14[data_finalGR14$emitidosGR14==0,]$emitidosGR14 = NA
data_finalGR14 = data_finalGR14 %>%
mutate(ausentesGR14= electoresGR14 - emitidosGR14,
por_ausentesGR14 = (ausentesGR14/electoresGR14)*100)
blancos_nulos = dataGR14 %>% filter(TIPOORGPOL == "VOTOS EN BLANCO" | TIPOORGPOL =="VOTOS NULOS" ) %>%
group_by(TXUBIGEO) %>%
summarise(blancosnulosGR14 = sum(VOTOS, na.rm = T))
data_finalGR14 = left_join(data_finalGR14, blancos_nulos, by="TXUBIGEO") #join
data_finalGR14  = data_finalGR14 %>%
mutate (por_blancosnulosGR14 = (blancosnulosGR14/emitidosGR14)*100)
data_finalGR14  = data_finalGR14 %>%
mutate (validosGR14 = emitidosGR14-blancosnulosGR14)
partidos_politicos = dataGR14 %>% filter(TIPOORGPOL == "PARTIDO POLITICO") %>%
group_by(TXUBIGEO) %>%
summarise(partidosGR14 = sum(VOTOS, na.rm = T))
data_finalGR14 = left_join(data_finalGR14, partidos_politicos, by="TXUBIGEO") #join
mov_regionales = dataGR14 %>% filter(TIPOORGPOL == "MOVIMIENTO REGIONAL") %>%
group_by(TXUBIGEO) %>%
summarise(movimientosGR14 = sum(VOTOS, na.rm = T))
data_finalGR14 = left_join(data_finalGR14, mov_regionales, by="TXUBIGEO") #join
data_finalGR14  = data_finalGR14 %>%
mutate (por_partidosGR14 = (partidosGR14/validosGR14)*100,
por_movimientosGR14 = (movimientosGR14/validosGR14)*100)
dataGR14= dataGR14[!dataGR14$TIPOORGPOL == "VOTOS EN BLANCO",]
dataGR14= dataGR14[!dataGR14$TIPOORGPOL == "VOTOS NULOS",]
dataGR14 <- dataGR14[order(dataGR14$TXUBIGEO, -dataGR14$VOTOS),]
primero = dataGR14 %>% group_by(TXUBIGEO) %>% filter(row_number()==1) %>% mutate(primeroGR14=VOTOS)
data_finalGR14 = left_join(data_finalGR14, primero[c(1,13)], by="TXUBIGEO") #join
segundo = dataGR14 %>% group_by(TXUBIGEO) %>% filter(row_number()==2) %>% mutate(segundoGR14=VOTOS)
data_finalGR14 = left_join(data_finalGR14, segundo[c(1,13)], by="TXUBIGEO") #join
data_finalGR14 = data_finalGR14 %>% mutate(concentracionGR14 = primeroGR14/validosGR14 + segundoGR14/validosGR14)
head(data_finalGR14)
dataGP14=read_xlsx("PROVINCIAL_2014_DISTRITAL.xlsx")
head(dataGP14)
electores = dataGP14 %>%
group_by(TXUBIGEO) %>% #seleccionar una fila por distrito
summarise(electoresGP14 = max(ELECTORES, na.rm = T))
emitidos = dataGP14 %>% group_by(TXUBIGEO) %>%
summarise(emitidosGP14 = sum(VOTOS, na.rm = T))
data_finalGP14 = left_join(electores, emitidos, by="TXUBIGEO") #join
#ciudar que los que tienen 0 en votos emitidos sean NA
data_finalGP14[data_finalGP14$emitidosGP14==0,]$emitidosGP14 = NA
data_finalGP14 = data_finalGP14 %>%
mutate(ausentesGP14= electoresGP14 - emitidosGP14,
por_ausentesGP14 = (ausentesGP14/electoresGP14)*100)
blancos_nulos = dataGP14 %>% filter(TXORGPOL == "VOTOS EN BLANCO" | TXORGPOL =="VOTOS NULOS" ) %>%
group_by(TXUBIGEO) %>%
summarise(blancosnulosGP14 = sum(VOTOS, na.rm = T))
data_finalGP14 = left_join(data_finalGP14, blancos_nulos, by="TXUBIGEO") #join
data_finalGP14  = data_finalGP14 %>%
mutate (por_blancosnulosGP14 = (blancosnulosGP14/emitidosGP14)*100)
data_finalGP14  = data_finalGP14 %>%
mutate (validosGP14 = emitidosGP14-blancosnulosGP14)
dataGP14= dataGP14[!dataGP14$TXORGPOL == "VOTOS EN BLANCO",]
dataGP14= dataGP14[!dataGP14$TXORGPOL == "VOTOS NULOS",]
dataGP14 = dataGP14[order(dataGP14$TXUBIGEO, -dataGP14$VOTOS),]
primero = dataGP14 %>% group_by(TXUBIGEO) %>% filter(row_number()==1) %>% mutate(primeroGP14=VOTOS)
data_finalGP14 = left_join(data_finalGP14, primero[c(1,12)], by="TXUBIGEO") #join
segundo = dataGP14 %>% group_by(TXUBIGEO) %>% filter(row_number()==2) %>% mutate(segundoGP14=VOTOS)
data_finalGP14 = left_join(data_finalGP14, segundo[c(1,12)], by="TXUBIGEO") #join
data_finalGP14 = data_finalGP14 %>% mutate(concentracionGP14 = primeroGP14/validosGP14 + segundoGP14/validosGP14)
head(data_finalGP14)
dataGL14=read_xlsx("distrital_2014_DISTRITAL.xlsx")
head(dataGL14)
electores = dataGL14 %>%
group_by(TXUBIGEO) %>% #seleccionar una fila por distrito
summarise(electoresGL14 = max(ELECTORES, na.rm = T))
emitidos = dataGL14 %>% group_by(TXUBIGEO) %>%
summarise(emitidosGL14 = sum(VOTOS, na.rm = T))
data_finalGL14 = left_join(electores, emitidos, by="TXUBIGEO") #join
#ciudar que los que tienen 0 en votos emitidos sean NA
data_finalGL14[data_finalGL14$emitidosGL14==0,]$emitidosGL14 = NA
data_finalGL14 = data_finalGL14 %>%
mutate(ausentesGL14= electoresGL14 - emitidosGL14,
por_ausentesGL14 = (ausentesGL14/electoresGL14)*100)
blancos_nulos = dataGL14 %>% filter(TXORGPOL == "VOTOS EN BLANCO" | TXORGPOL =="VOTOS NULOS" ) %>%
group_by(TXUBIGEO) %>%
summarise(blancosnulosGL14 = sum(VOTOS, na.rm = T))
data_finalGL14 = left_join(data_finalGL14, blancos_nulos, by="TXUBIGEO") #join
data_finalGL14  = data_finalGL14 %>%
mutate (por_blancosnulosGL14 = (blancosnulosGL14/emitidosGL14)*100)
data_finalGL14  = data_finalGL14 %>%
mutate (validosGL14 = emitidosGL14-blancosnulosGL14)
dataGL14= dataGL14[!dataGL14$TXORGPOL == "VOTOS EN BLANCO",]
dataGL14= dataGL14[!dataGL14$TXORGPOL == "VOTOS NULOS",]
dataGL14 = dataGL14[order(dataGL14$TXUBIGEO, -dataGL14$VOTOS),]
primero = dataGL14 %>% group_by(TXUBIGEO) %>% filter(row_number()==1) %>% mutate(primeroGL14=VOTOS)
data_finalGL14 = left_join(data_finalGL14, primero[c(1,12)], by="TXUBIGEO") #join
segundo = dataGL14 %>% group_by(TXUBIGEO) %>% filter(row_number()==2) %>% mutate(segundoGL14=VOTOS)
data_finalGL14 = left_join(data_finalGL14, segundo[c(1,12)], by="TXUBIGEO") #join
data_finalGL14 = data_finalGL14 %>% mutate(concentracionGL14 = primeroGL14/validosGL14 + segundoGL14/validosGL14)
head(data_finalGL14)
data=read.csv("dataAfertdep.csv")
data1=data[,c(3,14)]
data1$periodo=1
names(data1)=c('candidato','seguidoresNuevos',"periodo")
data2=data[,c(3,15)]
data2$periodo=2
names(data2)=names(data1)
dataLong=rbind(data1,data2)
labels <- c('1'="Antes del primer debate (sólo setiembre)", '2'="Entre primer y segundo debate")
dataLong$periodo <- ordered(dataLong$periodo, labels =labels,
levels=c(1,2))
library(forcats)
g <- ggplot(data=dataLong,
aes(x=fct_rev(candidato),y=seguidoresNuevos)) + geom_bar(stat="identity")
library(ggplot2)
library(ggrepel)
library(plotly)
library(scales)
library(ggpubr)
library(forcats)
g <- ggplot(data=dataLong,
aes(x=fct_rev(candidato),y=seguidoresNuevos)) + geom_bar(stat="identity")
g +     coord_flip() + facet_wrap( ~ periodo,scales="free_x") + ylim(0, 4000) + ylab("Nuevos Seguidores") + xlab("")
g <- ggplot(data=data,
aes(x=reorder(candidato, Nuevos_Followers1), y=Nuevos_Followers1,group=1)) +
geom_bar(stat="identity") + xlab("") + ylab("Nuevos Followers")+
theme(text = element_text(size=9))+ coord_flip() + ggtitle("Entre 01/09 al 23/09 (antes debate 1)") +
ylim(0, 4000)
d <- ggplot(data=data,
aes(x=reorder(candidato, Nuevos_Followers2), y=Nuevos_Followers2,group=1)) +
geom_bar(stat="identity") + xlab("") + ylab("Nuevos Followers")+
theme(text = element_text(size=9))+ coord_flip() + ggtitle("Entre 24/09 al 29/09 (antes debate 2)")+
ylim(0, 4000)
ggarrange(g, d ,
ncol = 2, nrow = 1)
